<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region Window -->
    <Style x:Key="Window" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="#FF202326"/>
    </Style>
    <!--#endregion-->
    
    <!--#region Buttons -->
    <Style x:Key="PaternButton" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="Background" Value="#FF2C3034"/>
            <Setter Property="Foreground" Value="#FFABABAC"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF36393F"/>
                                <Setter Property="Foreground" Value="#FFF2F2F2"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF1E1E1E"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region Window Button -->
    <Style x:Key="ChildrenToolbarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource PaternButton}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Margin" Value="0,0,1,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="PatternIcon" TargetType="{x:Type Image}">
        <Style.Setters>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
        </Style.Setters>
    </Style>

    <Style x:Key="minimizeIcon" TargetType="{x:Type Image}" BasedOn="{StaticResource PatternIcon}">
        <Setter Property="Source" Value="/Icon/minimizeIconDark.png"/>
    </Style>

    <Style x:Key="squareIcon" TargetType="{x:Type Image}" BasedOn="{StaticResource PatternIcon}">
        <Setter Property="Source" Value="/Icon/squareIconDark.png"/>
    </Style>

    <Style x:Key="closeIcon" TargetType="{x:Type Image}" BasedOn="{StaticResource PatternIcon}">
        <Setter Property="Source" Value="/Icon/closeIconDark.png"/>
    </Style>

    <Style x:Key="settingIcon" TargetType="{x:Type Image}" BasedOn="{StaticResource PatternIcon}">
        <Setter Property="Source" Value="/Icon/settingIconDark.png"/>
    </Style>
    <!--#endregion-->

    <!--#region Frame Button -->
    <Style x:Key="ChildrenFrameButton" TargetType="{x:Type Button}" BasedOn="{StaticResource PaternButton}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->

    <!--#region Button from Add and Update windows -->
    <Style x:Key="ChildrenButtonEditWindow" TargetType="Button" BasedOn="{StaticResource PaternButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <!--#endregion-->

    <!--#region Elements from Custom ComboBox -->
    <Style x:Key="ChildrenButtonFromComboBox" TargetType="Button" BasedOn="{StaticResource PaternButton}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="1,1,1,0"/>
    </Style>

    <Style x:Key="BackgroundFromComboBox" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="#FFABABAC"/>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock -->
    <Style x:Key="TextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFABABAC"/>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock from Add and Update windows -->
    <Style x:Key="TextBlockEditWindow" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlock}">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock for test question -->
    <Style x:Key="TextBlockQuestion" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFABABAC"/>
        <Setter Property="Margin" Value="10,5,10,5"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock for test answer -->
    <Style x:Key="TextBlockAnswer" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFABABAC"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock for Points -->
    <Style x:Key="TextBlockPoints" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFABABAC"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="10,5,0,0"/>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock for Result -->
    <Style x:Key="TextBlockResult" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFABABAC"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="10,5,0,0"/>
    </Style>
    <!--#endregion-->

    <!--#region Buttons for notification windows -->
    <Style x:Key="ChildrenButtonForNotificationWindow" TargetType="{x:Type Button}" BasedOn="{StaticResource PaternButton}">
        <Style.Setters>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Margin" Value="9"/>
        </Style.Setters>
    </Style>

    <Style x:Key="TextBlockForNotificationWindow" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <!--#endregion-->

    <!--#region Button Setting -->
    <Style x:Key="ChildrenButtonSetting" TargetType="{x:Type Button}" BasedOn="{StaticResource PaternButton}">
        <Style.Setters>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region RadioBotton -->
    <Style x:Key="PatternRadioButton" TargetType="{x:Type RadioButton}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent" Cursor="Hand" Margin="0,10,0,0">
                            <BulletDecorator.Bullet>
                                <Grid Height="20"
                                      Width="20"
                                      Margin="10,0,0,0">
                                    <Border Name="RadioOuter"
                                            Background="Transparent"
                                            BorderBrush="#FFABABAC"
                                            BorderThickness="2"
                                            CornerRadius="4"/>
                                    <Border Name="RadioMark"
                                            CornerRadius="6"
                                            Margin="4" 
                                            Background="#FFABABAC" 
                                            Visibility="Hidden"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <TextBlock Margin="15,0,0,0">
                                    <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFF2F2F2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region Scroll -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Foreground" Value="#FF40444B"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Width="12"
                          Background="Transparent">
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" 
                                       Background="{TemplateBinding Foreground}" 
                                       Style="{StaticResource ScrollThumbs}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ProgressBar -->
    <Style x:Key="ProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="Margin" Value="5,10,5,10"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#FFABABAC"/>
        <Setter Property="BorderBrush" Value="#FFABABBB"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="TextBlockProgressBar" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFABABAC"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->

    <!--#region DataGrid -->
    <Style x:Key="DataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="10,10,10,10"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="RowBackground" Value="#FF2C3034"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
    </Style>
    <Style x:Key="DataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="#FFABABAC"/>
        <Setter Property="Background" Value="#FF2C3034"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF36393F"/>
                <Setter Property="Foreground" Value="#FFF2F2F2"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Black"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FF40444B"/>
                <Setter Property="Foreground" Value="#FFF2F2F2"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="#FF36393F"/>
        <Setter Property="Foreground" Value="#FFF2F2F2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Height" Value="25"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF36393F"/>
                <Setter Property="Foreground" Value="#FFF2F2F2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region TextBox -->
    <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10,5,10,5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Background" Value="#FF2C3034"/>
        <Setter Property="Foreground" Value="#FFABABAC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      IsTabStop="False"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="Background" Value="#FF36393F"/>
                            <Setter Property="Foreground" Value="#FFF2F2F2"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="Background" Value="#FF40444B"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region PasswordBox and Button for PasswordBox -->
    <Style x:Key="PasswordBox" TargetType="{x:Type PasswordBox}">
        <Style.Setters>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Background" Value="#FF2C3034"/>
            <Setter Property="Foreground" Value="#FFF2F2F2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="Bacground" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          IsTabStop="False"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background" Value="#FF36393F"/>
                                <Setter Property="Foreground" Value="#FFF2F2F2"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#FF40444B"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="ChildrenButtonForPasswordBox" TargetType="{x:Type Button}" BasedOn="{StaticResource PaternButton}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="20,5,20,10"/>
    </Style>
    <!--#endregion-->

    <!--#region CheckBox -->
    <Style x:Key="CheckBox" TargetType="{x:Type CheckBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="#FFABABAC"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent"
                                         Cursor="Hand"
                                         Margin="0,5,0,0">
                            <BulletDecorator.Bullet>
                                <Grid Height="20"
                                      Width="20"
                                      Margin="10,0,0,0">
                                    <Border Name="RadioOuter"
                                            Background="Transparent"
                                            BorderBrush="#FFABABAC"
                                            BorderThickness="2"
                                            CornerRadius="4"/>
                                    <Border Name="RadioMark"
                                            CornerRadius="6"
                                            Margin="4"
                                            Background="#FFABABAC" 
                                            Visibility="Hidden"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <TextBlock Margin="15,0,0,0">
                                    <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFABABAC" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

</ResourceDictionary>