<Window x:Class="TestM.Views.QuestionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestM"
        mc:Ignorable="d"
        BorderBrush="Black"
        BorderThickness="1"
        WindowStartupLocation="CenterScreen"
        Title="QuestionWindow" Height="500" Width="1500" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="PaternButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="#93CCEA"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#8FE9FA"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#00A1E1"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="ChildrenToolbarButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="Height" Value="24"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Margin" Value="0,0,1,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style x:Key="PatternIcon" TargetType="Image">
            <Style.Setters>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="20"/>
            </Style.Setters>
        </Style>
        <Style x:Key="ChildrenToolBarLeftButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
        </Style>
        <Style x:Key="ChildrenToolBarRightButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
        </Style>
        <Style x:Key="ChildrenButtonSetting" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Style.Setters>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Width" Value="30"/>
                <Setter Property="Margin" Value="0,5,5,5"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style.Setters>
        </Style>
        <Style x:Key="DataGrid" TargetType="DataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
        </Style>
        <Style x:Key="DataGridCell" TargetType="DataGridCell">
            <Setter Property="Background" Value="#93CCEA"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="25"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#8FE9FA"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#8FE9FA"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridColumnHeader" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#00A1E1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Height" Value="25"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1E90FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFD2DFE2" Offset="0"/>
            <GradientStop Color="#FF66B3E2" Offset="1"/>
            <GradientStop Color="#FF9ED1DD" Offset="0.495"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Right">
            <Button Style="{StaticResource ChildrenToolbarButton}"
                    Command="{Binding MinimizeWindow}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Image Style="{StaticResource PatternIcon}"
                       Name="MinimizeButton"
                       Source="/Icon/minimizeIcon.png">
                </Image>
            </Button>
            <Button Style="{StaticResource ChildrenToolbarButton}"
                    Command="{Binding WindowStateButton}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Image Style="{StaticResource PatternIcon}"
                       Name="WindowStateButton"
                       Source="/Icon/squareIcon.png">
                </Image>
            </Button>
            <Button Style="{StaticResource ChildrenToolbarButton}"
                    Command="{Binding CloseWindow}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Image Style="{StaticResource PatternIcon}"
                       Name="CloseButton" 
                       Source="/Icon/closeIcon.png">
                </Image>
            </Button>
        </StackPanel>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Left"
                    Grid.Row="1"
                    Grid.Column="0">
            <Button Content="Добавить"
                Command="{Binding AddQuestion}"
                CommandParameter="{Binding}"
                Style="{StaticResource ChildrenToolBarLeftButton}"/>
            <Button Content="Изменить"
                    Command="{Binding UpdateQuestion}"
                    CommandParameter="{Binding}"
                    Style="{StaticResource ChildrenToolBarLeftButton}"/>
            <Button Content="Удалить"
                    Command="{Binding DeleteQuestion}"
                    CommandParameter="{Binding}"
                    Style="{StaticResource ChildrenToolBarLeftButton}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Grid.Row="1"
                    Grid.Column="1">
            <Button Content="Сохранить"
                    Name="SaveBitton"
                    Command="{Binding SaveFile}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    Style="{StaticResource ChildrenToolBarRightButton}"/>
            <Button Style="{StaticResource ChildrenButtonSetting}"
                    Command="{Binding OpenSettingInfo}">
                <Image Style="{StaticResource PatternIcon}"
                       Source="/Icon/settingIcon.png"/>
            </Button>
        </StackPanel>
        <DataGrid Style="{StaticResource DataGrid}"
                  CellStyle="{StaticResource DataGridCell}"
                  ColumnHeaderStyle="{StaticResource DataGridColumnHeader}"
                  ItemsSource="{Binding ItemsSource}"
                  SelectedItem="{Binding SelectedItem}"
                  SelectedIndex="{Binding SelectedIndex}"
                  Grid.Row="2"
                  Grid.ColumnSpan="2">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Тип вопроса"
                                    Width="100"
                                    Binding="{Binding TypeQuestion, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Вопрос"
                                    Width="320"
                                    Binding="{Binding Question, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ А"
                                    Width="320"
                                    Binding="{Binding AnswerA, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ Б"
                                    Width="320"
                                    Binding="{Binding AnswerB, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ В"
                                    Width="320"
                                    Binding="{Binding AnswerC, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ"
                                    Width="*"
                                    Binding="{Binding RightAnswer, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>