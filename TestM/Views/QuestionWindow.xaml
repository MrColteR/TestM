<Window x:Class="TestM.Views.QuestionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestM"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="QuestionWindow" Height="500" Width="1500">
    <Window.Resources>
        <Style x:Key="ParentButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Button.Background" Value="Yellow"/>
                <Setter Property="Button.BorderBrush" Value="Black"/>
                <Setter Property="Button.Height" Value="30"/>
                <Setter Property="Button.Width" Value="100"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter Property="Background" Value="YellowGreen"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ChildrenButtonLeft" TargetType="Button" BasedOn="{StaticResource ParentButton}">
            <Style.Setters>
                <Setter Property="Control.Margin" Value="10,0,0,0"/>
            </Style.Setters>
        </Style>
        <Style x:Key="ChildrenButtonRight" TargetType="Button" BasedOn="{StaticResource ParentButton}">
            <Style.Setters>
                <Setter Property="Control.Margin" Value="0,0,10,0"/>
            </Style.Setters>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="LightBlue"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" 
                                 Color="LightBlue"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                 Color="Black"/>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Left"
                    Grid.Row="0"
                    Grid.Column="0">
            <Button Content="Add"
                Command="{Binding AddQuestion}"
                CommandParameter="{Binding}"
                Style="{StaticResource ChildrenButtonLeft}"/>
            <Button Content="Delete"
                Style="{StaticResource ChildrenButtonLeft}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Grid.Row="0"
                    Grid.Column="1">
            <Button Content="Save"
                    Command="{Binding SaveFile}"
                    CommandParameter="{Binding}"
                    Style="{StaticResource ChildrenButtonRight}"/>
            <Button Content="Back"
                    Command="{Binding CloseQuestionWindow}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    Style="{StaticResource ChildrenButtonRight}"/>
        </StackPanel>
        <DataGrid Margin="10,10,10,10"
                  FontSize="16"
                  ItemsSource="{Binding ItemsSource}"
                  SelectedItem="{Binding SelectedItem}"
                  SelectedIndex="{Binding SelectedIndex}" 
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  Background="White"
                  BorderBrush="Black"
                  AlternatingRowBackground="White"
                  SelectionMode="Single"
                  IsReadOnly="True"
                  Grid.Row="1"
                  Grid.ColumnSpan="2">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Тип вопроса"
                                    Width="0.55*"
                                    Binding="{Binding TypeQuestion, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Вопрос"
                                    Width="2*"
                                    Binding="{Binding Question, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ А"
                                    Width="1.2*"
                                    Binding="{Binding AnswerA, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ Б"
                                    Width="1.2*"
                                    Binding="{Binding AnswerB, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ В"
                                    Width="1.2*"
                                    Binding="{Binding AnswerC, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ Г"
                                    Width="1.2*"
                                    Binding="{Binding AnswerD, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ответ"
                                    Width="0.27*"
                                    Binding="{Binding RightAnswer, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>