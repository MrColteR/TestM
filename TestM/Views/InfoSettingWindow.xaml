<Window x:Class="TestM.Views.InfoSettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestM.Views"
        xmlns:focus="clr-namespace:TestM.Command"
        mc:Ignorable="d"
        BorderBrush="Black"
        BorderThickness="1"
        Title="InfoSettingWindow" Height="450" Width="300" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" WindowStyle="None">
    <Window.Resources>
        <Style x:Key="PaternButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="#93CCEA"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#8FE9FA"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" Value="#8FE9FA"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#00A1E1"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="ChildrenToolbarButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="Height" Value="24"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Margin" Value="0,0,1,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style x:Key="ChildrenLeftButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="10,5,0,5"/>
        </Style>
        <Style x:Key="ChildrenRightButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,5,10,5"/>
        </Style>
        <Style x:Key="ChildrenStackPanelButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="1,1,1,0"/>
        </Style>
        <Style x:Key="ChldrenComboBoxButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="10,5,10,5"/>
        </Style>
        <Style x:Key="TextBlock" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="FontSize" Value="17"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="TextBlockCheckBox" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style x:Key="TextBlockGrid" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="265"/>
        </Style>
        <Style x:Key="TextBox" TargetType="TextBox">
            <Setter Property="Margin" Value="10,5,10,5"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="5,3,0,0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Background" Value="#93CCEA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          IsTabStop="False"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background" Value="#8FE9FA"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background" Value="#8FE9FA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PatternIcon" TargetType="Image">
            <Style.Setters>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="20"/>
            </Style.Setters>
        </Style>
        <Style x:Key="CheckBox" TargetType="CheckBox">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator Background="Transparent"
                                             Cursor="Hand"
                                             Margin="0,5,0,0">
                                <BulletDecorator.Bullet>
                                    <Grid Height="20"
                                          Width="20"
                                          Margin="10,0,0,0">
                                        <Border Name="RadioOuter"
                                                Background="Transparent"
                                                BorderBrush="#005eff"
                                                BorderThickness="2"
                                                CornerRadius="4"/>
                                        <Border Name="RadioMark"
                                                CornerRadius="6"
                                                Margin="4" 
                                                Background="#005eff" 
                                                Visibility="Hidden"/>
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <TextBlock Margin="15,0,0,0">
                                    <ContentPresenter />
                                </TextBlock>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#005eff" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFD2DFE2" Offset="0"/>
            <GradientStop Color="#FF66B3E2" Offset="1"/>
            <GradientStop Color="#FF9ED1DD" Offset="0.495"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="135"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    Grid.Row="0"
                    HorizontalAlignment="Right">
            <Button Style="{StaticResource ChildrenToolbarButton}"
                    Command="{Binding CloseWindow}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Image Style="{StaticResource PatternIcon}"
                       Name="CloseButton" 
                       Source="/Icon/closeIcon.png">
                </Image>
            </Button>
        </StackPanel>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="1"
                   Text="Используемые темы"/>
        <StackPanel Grid.Row="2">
            <CheckBox IsChecked="{Binding FirstCheckBoxButton}"
                      Style="{StaticResource CheckBox}">
                <TextBlock Style="{StaticResource TextBlockCheckBox}"
                           Text="1"/>
            </CheckBox>
            <CheckBox IsChecked="{Binding SecondCheckBoxButton}"
                      Style="{StaticResource CheckBox}">
                <TextBlock Style="{StaticResource TextBlockCheckBox}"
                           Text="2"/>
            </CheckBox>
            <CheckBox IsChecked="{Binding ThreeCheckBoxButton}"
                      Style="{StaticResource CheckBox}">
                <TextBlock Style="{StaticResource TextBlockCheckBox}"
                           Text="3"/>
            </CheckBox>
            <CheckBox IsChecked="{Binding FourtCheckBoxButton}"
                      Style="{StaticResource CheckBox}" >
                <TextBlock Style="{StaticResource TextBlockCheckBox}"
                           Text="4"/>
            </CheckBox>
            <CheckBox IsChecked="{Binding FiveCheckBoxButton}"
                      Style="{StaticResource CheckBox}">
                <TextBlock Style="{StaticResource TextBlockCheckBox}"
                           Text="5"/>
            </CheckBox>
        </StackPanel>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="3"
                   Text="Минимальный порог баллов"/>
        <TextBox Style="{StaticResource TextBox}"
                 Grid.Row="4"
                 focus:FocusExtension.IsFocused="True"
                 Text="{Binding MinimalCountPoints, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="5"
                   Text="Количество вопросов по теме"/>
        <TextBox Style="{StaticResource TextBox}"
                 Grid.Row="6"
                 Text="{Binding CountQuestionOneType, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="7"
                   Text="Количество вопросов в тесте"/>
        <TextBox Style="{StaticResource TextBox}"
                 Grid.Row="8"
                 IsReadOnly="True"
                 Text="{Binding CountQuestion, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Style="{StaticResource ChildrenLeftButton}"
                Grid.Row="9"
                Command="{Binding ChangeSettingInfo}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                Content="Изменить"/>
        <Button Style="{StaticResource ChildrenRightButton}"
                Grid.Row="9"
                Command="{Binding CloseWindow}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                Content="Отмена"/>
    </Grid>
</Window>
