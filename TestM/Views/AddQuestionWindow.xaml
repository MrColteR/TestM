<Window x:Class="TestM.Views.AddQuestionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestM.Views"
        xmlns:focus="clr-namespace:TestM.Command"
        mc:Ignorable="d"
        BorderBrush="black"
        BorderThickness="1"
        WindowStartupLocation="CenterScreen"
        Title="AddQuestionWindow" Height="555" Width="400" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="PaternButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="#93CCEA"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#8FE9FA"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" Value="#8FE9FA"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#00A1E1"/>
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="ChildrenToolbarButton"
               TargetType="Button" 
               BasedOn="{StaticResource PaternButton}">
            <Style.Setters>
                <Setter Property="Height" Value="24"/>
                <Setter Property="Width" Value="24"/>
                <Setter Property="Margin" Value="0,0,1,0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style.Setters>
        </Style>
        <Style x:Key="ChildrenLeftButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="10,5,0,5"/>
        </Style>
        <Style x:Key="ChildrenRightButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,5,10,5"/>
        </Style>
        <Style x:Key="ChldrenComboBoxButton" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="10,5,10,5"/>
        </Style>
        <Style x:Key="ChildrenStackPanelButtonUp" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="1,1,1,0"/>
        </Style>
        <Style x:Key="ChildrenStackPanelButtonDown" TargetType="Button" BasedOn="{StaticResource PaternButton}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="1,1,1,0"/>
        </Style>
        <Style x:Key="PatternIcon" TargetType="Image">
            <Style.Setters>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="20"/>
            </Style.Setters>
        </Style>
        <Style x:Key="TextBlock" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="FontSize" Value="17"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="TextBox" TargetType="TextBox">
            <Setter Property="Margin" Value="10,5,10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Background" Value="#93CCEA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          IsTabStop="False"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background" Value="#8FE9FA"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="Background" Value="#8FE9FA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFD2DFE2" Offset="0"/>
            <GradientStop Color="#FF66B3E2" Offset="1"/>
            <GradientStop Color="#FF9ED2DD" Offset="0.501"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Grid.Row="0">
            <Button Style="{StaticResource ChildrenToolbarButton}"
                        Command="{Binding MinimizeWindow}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Image Style="{StaticResource PatternIcon}"
                       Name="MinimizeButton"
                       Source="/Icon/minimizeIcon.png">
                </Image>
            </Button>
            <Button Style="{StaticResource ChildrenToolbarButton}"
                    Command="{Binding CloseWindow}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                <Image Style="{StaticResource PatternIcon}"
                       Name="CloseButton" 
                       Source="/Icon/closeIcon.png">
                </Image>
            </Button>
        </StackPanel>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="1"
                   Text="Вопрос"/>
        <TextBox Style="{StaticResource TextBox}"
                 Grid.Row="2"
                 focus:FocusExtension.IsFocused="True"
                 Name="Question"
                 Text="{Binding Question, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="3"
                   Text="Тип вопроса"/>
        <Button Style="{StaticResource ChldrenComboBoxButton}"
                Name="TypeButton"
                Grid.Row="4" 
                Content="{Binding TypeQuestion, UpdateSourceTrigger=PropertyChanged}"
                Command="{Binding OpenComboBoxType}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="5"
                   Text="Ответ А"/>
        <TextBox Style="{StaticResource TextBox}"
                 Grid.Row="6"
                 Name="AnswerATextBox"
                 Text="{Binding AnswerA, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="7"
                   Text="Ответ Б"/>
        <TextBox Style="{StaticResource TextBox}"
                 Grid.Row="8"
                 Name="AnswerBTextBox"
                 Text="{Binding AnswerB, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Style="{StaticResource TextBlock}"
                   Grid.Row="9"
                   Text="Ответ В"/>
        <TextBox Style="{StaticResource TextBox}"
                 Grid.Row="10"
                 Name="AnswerCTextBox"
                 Text="{Binding AnswerC, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Style="{StaticResource TextBlock}"
                   Text="Правильный ответ"
                   Grid.Row="11"/>
        <Button Style="{StaticResource ChldrenComboBoxButton}"
                Name="RightAnswerButton"
                Grid.Row="12" 
                Content="{Binding RightAnswer, UpdateSourceTrigger=PropertyChanged}"
                Command="{Binding OpenComboBoxAnswer}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
        <Button Style="{StaticResource ChildrenLeftButton}"
                Grid.Row="13"
                Command="{Binding AddQuestion}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                Content="Добавить"/>
        <Button Style="{StaticResource ChildrenRightButton}"
                Grid.Row="13"
                Command="{Binding Close}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                Content="Отмена"/>
        <Grid Grid.Row="5"
              Grid.RowSpan="5"
              Name="GridComboBoxType"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Margin="0,-35,0,0"
              Visibility="Hidden">
            <Rectangle Height="157" Width="360" Margin="0,0,0,0" Fill="#1E90FF"/>
            <StackPanel Orientation="Vertical" Margin="0,0,0,0">
                <Button Style="{StaticResource ChildrenStackPanelButtonUp}"
                        Name="LegalBases"
                        Content="1"
                        Command="{Binding ChoiceType}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Button Style="{StaticResource ChildrenStackPanelButtonUp}"
                        Name="Safety"
                        Content="2"
                        Command="{Binding ChoiceType}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Button Style="{StaticResource ChildrenStackPanelButtonUp}"
                        Name="TTX"
                        Content="3"
                        Command="{Binding ChoiceType}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Button Style="{StaticResource ChildrenStackPanelButtonUp}"
                        Name="Command"
                        Content="4"
                        Command="{Binding ChoiceType}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Button Style="{StaticResource ChildrenStackPanelButtonUp}"
                        Name="Delays"
                        Content="5"
                        Command="{Binding ChoiceType}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="8"
              Grid.RowSpan="6"
              Name="GridComboBoxRihgtAnswer"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Background="Transparent"
              Margin="0,0,0,30"
              Visibility="Hidden">
            <Rectangle Height="96" Width="360" Margin="1,1,1,1" Fill="#1E90FF"/>
            <StackPanel Orientation="Vertical" Margin="1,1,1,1">
                <Button Style="{StaticResource ChildrenStackPanelButtonDown}"
                        Name="AnswerA"
                        Content="А"
                        Command="{Binding ChoiceAnswer}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Button Style="{StaticResource ChildrenStackPanelButtonDown}"
                        Name="AnswerB"
                        Content="Б"
                        Command="{Binding ChoiceAnswer}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Button Style="{StaticResource ChildrenStackPanelButtonDown}"
                        Name="AnswerC"
                        Content="В"
                        Command="{Binding ChoiceAnswer}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
